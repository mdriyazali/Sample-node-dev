name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: yarn install

      - name: Run ESLint
        run: yarn lint

  test:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      PGPASSWORD: ${{ secrets.POSTGRES_PASSWORD }}  # Secret for PostgreSQL password
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: mydb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      run: |
        echo "Waiting for PostgreSQL to start..."
        sleep 10  # Wait for PostgreSQL to initialize

        echo "Environment variables:"
        cat .env

        echo "Verify PostgreSQL connection:"
        psql -h localhost -U myuser -d mydb -c "SELECT version();"

        echo "Run tests:"
        yarn test

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: yarn install

      - name: Build project
        run: yarn build

  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t sample-node-dev .
